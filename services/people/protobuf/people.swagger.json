{
  "swagger": "2.0",
  "info": {
    "title": "services/people/protobuf/people.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "People"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/people": {
      "get": {
        "operationId": "People_List",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/peoplePeopleResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of peoplePeopleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "People"
        ]
      },
      "post": {
        "operationId": "People_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/peoplePeopleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/peoplePeopleCreateParams"
            }
          }
        ],
        "tags": [
          "People"
        ]
      }
    },
    "/people/{id}": {
      "get": {
        "operationId": "People_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/peoplePeopleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "@gotags: json:\"id\" db:\"id\" xml:\"id\" validate:\"required,uuid4_rfc4122\"`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "People"
        ]
      },
      "delete": {
        "operationId": "People_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/absResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "@gotags: json:\"id\" db:\"id\" xml:\"id\" validate:\"required,uuid4_rfc4122\"`",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "People"
        ]
      },
      "patch": {
        "operationId": "People_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/absResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "@gotags: json:\"id\" db:\"id\" xml:\"id\" validate:\"required,uuid4_rfc4122\"`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/PeopleUpdateBody"
            }
          }
        ],
        "tags": [
          "People"
        ]
      }
    }
  },
  "definitions": {
    "PeopleUpdateBody": {
      "type": "object",
      "properties": {
        "Status": {
          "type": "string",
          "title": "@gotags: json:\"status\" xml:\"status\" db:\"status\" validate:\"required,alpha\"`"
        },
        "ExpireddAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"expired_at\" xml:\"iexpired_atd\" db:\"expired_at\""
        },
        "firstname": {
          "type": "string",
          "title": "@gotags: json:\"firstname\" xml:\"firstname\" db:\"firstname\" validate:\"required,alphanumunicode\"`"
        },
        "lastname": {
          "type": "string",
          "title": "@gotags: json:\"lastname\" xml:\"lastname\" db:\"lastname\" validate:\"required,alphanumunicode\"`"
        },
        "birthday": {
          "type": "string",
          "title": "@gotags: json:\"birthday\" xml:\"birthday\" db:\"birthday\" validate:\"required\"`"
        }
      }
    },
    "absResponse": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string",
          "title": "@gotags: json:\"message\""
        }
      }
    },
    "peoplePeopleCreateParams": {
      "type": "object",
      "properties": {
        "firstname": {
          "type": "string",
          "title": "@gotags: json:\"firstname\" xml:\"firstname\" db:\"firstname\" validate:\"required,alphanumunicode\"`"
        },
        "lastname": {
          "type": "string",
          "title": "@gotags: json:\"lastname\" xml:\"lastname\" db:\"lastname\" validate:\"required,alphanumunicode\"`"
        },
        "birthday": {
          "type": "string",
          "title": "@gotags: json:\"birthday\" xml:\"birthday\" db:\"birthday\" validate:\"required\"`"
        }
      }
    },
    "peoplePeopleResponse": {
      "type": "object",
      "properties": {
        "Id": {
          "type": "string",
          "title": "@gotags: json:\"id\" xml:\"id\" db:\"id\""
        },
        "Status": {
          "type": "string",
          "title": "@gotags: json:\"status\" xml:\"status\" db:\"status\""
        },
        "CreatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"created_at\" xml:\"created_at\" db:\"created_at\""
        },
        "UpdatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"updated_at\" xml:\"updated_at\" db:\"updated_at\""
        },
        "ExpiredAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"expired_at\" xml:\"expired_at\" db:\"expired_at\""
        },
        "Firstname": {
          "type": "string",
          "title": "@gotags: json:\"firstname\" xml:\"firstname\" db:\"firstname\""
        },
        "Lastname": {
          "type": "string",
          "title": "@gotags: json:\"lastname\" xml:\"lastname\" db:\"lastname\""
        },
        "Birthday": {
          "type": "string",
          "title": "@gotags: json:\"birthday\" xml:\"birthday\" db:\"birthday\""
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
