syntax = "proto3";

package go.micro.service.account;

option go_package = "github.com/reversTeam/go-ms-tools/services/account/protobuf";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "github.com/reversTeam/go-ms-tools/services/abs/protobuf/abs.proto";

message AccountEntity {
  string people_id = 1; // @gotags: json:"people_id" db:"people_id"
}

message AccountCreateParams {
    string people_id = 1;  // @gotags: json:"people_id" db:"people_id"
    string password = 2;  // @gotags: json:"password" db:"password"
    string status = 3;    // @gotags: json:"status" db:"status"
}

message AccountUpdateParams {
    string people_id = 1;                                 // @gotags: json:"people_id" db:"people_id"
    string status = 2;                                    // @gotags: json:"status" db:"status"
    google.protobuf.Timestamp validated_at = 3;           // @gotags: json:"validated_at" db:"validated_at"
    google.protobuf.Timestamp expired_at = 4;             // @gotags: json:"expired_at" db:"expired_at"
    string password = 5;                                  // @gotags: json:"password" db:"password"
    string signin_id = 6;                                 // @gotags: json:"signin_id" db:"signin_id"
}

message AccountResponse {
    string people_id = 1;                                 // @gotags: json:"people_id" db:"people_id"
    string status = 2;                                    // @gotags: json:"status" db:"status"
    google.protobuf.Timestamp created_at = 3;             // @gotags: json:"created_at" db:"created_at"
    google.protobuf.Timestamp updated_at = 4;             // @gotags: json:"updated_at" db:"updated_at"
    google.protobuf.Timestamp validated_at = 5;           // @gotags: json:"validated_at" db:"validated_at"
    google.protobuf.Timestamp expired_at = 6;             // @gotags: json:"expired_at" db:"expired_at"
    string password = 7;                                  // @gotags: json:"password" db:"password"
    string signin_id = 8;                                 // @gotags: json:"signin_id" db:"signin_id"
}

service Account {

    rpc List(google.protobuf.Empty) returns (stream AccountResponse) {
        option (google.api.http) = {
            get: "/accounts"
        };
    }

    rpc Create(AccountCreateParams) returns (AccountResponse) {
        option (google.api.http) = {
            post: "/accounts"
            body: "*"
        };
    }

    rpc Get(AccountEntity) returns (AccountResponse) {
        option (google.api.http) = {
            get: "/accounts/{people_id}"
        };
    }

    rpc Update(AccountUpdateParams) returns (abs.Response) {
        option (google.api.http) = {
            patch: "/accounts/{people_id}"
            body: "*"
        };
    }

    rpc Delete(AccountEntity) returns (abs.Response) {
        option (google.api.http) = {
            delete: "/accounts/{people_id}"
        };
    }
}
