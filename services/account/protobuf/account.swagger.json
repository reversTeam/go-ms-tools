{
  "swagger": "2.0",
  "info": {
    "title": "services/account/protobuf/account.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Account"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/accounts": {
      "get": {
        "operationId": "Account_List",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/accountAccountResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of accountAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "Account"
        ]
      },
      "post": {
        "operationId": "Account_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/accountAccountCreateParams"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    },
    "/accounts/{peopleId}": {
      "get": {
        "operationId": "Account_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/accountAccountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "peopleId",
            "description": "@gotags: json:\"people_id\" db:\"people_id\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "delete": {
        "operationId": "Account_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/absResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "peopleId",
            "description": "@gotags: json:\"people_id\" db:\"people_id\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Account"
        ]
      },
      "patch": {
        "operationId": "Account_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/absResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "peopleId",
            "description": "@gotags: json:\"people_id\" db:\"people_id\" validate:\"required,uuid4_rfc4122\"`",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AccountUpdateBody"
            }
          }
        ],
        "tags": [
          "Account"
        ]
      }
    }
  },
  "definitions": {
    "AccountUpdateBody": {
      "type": "object",
      "properties": {
        "status": {
          "type": "string",
          "title": "@gotags: json:\"status\" db:\"status\" validate:\"required\"`"
        },
        "validatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"validated_at\" db:\"validated_at\""
        },
        "expiredAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"expired_at\" db:\"expired_at\""
        },
        "email": {
          "type": "string",
          "title": "@gotags: json:\"email\" db:\"email\" validate:\"required,email\"`"
        },
        "password": {
          "type": "string",
          "title": "@gotags: json:\"password\" db:\"password\" validate:\"required\"`"
        },
        "signinId": {
          "type": "string",
          "title": "@gotags: json:\"signin_id\" db:\"signin_id\" validate:\"required,uuid4_rfc4122\"`"
        }
      }
    },
    "absResponse": {
      "type": "object",
      "properties": {
        "Message": {
          "type": "string",
          "title": "@gotags: json:\"message\""
        }
      }
    },
    "accountAccountCreateParams": {
      "type": "object",
      "properties": {
        "peopleId": {
          "type": "string",
          "title": "@gotags: json:\"people_id\" db:\"people_id\" validate:\"required,uuid4_rfc4122\"`"
        },
        "signinId": {
          "type": "string",
          "title": "@gotags: json:\"signin_id\" db:\"sigmin_id\" validate:\"required,uuid4_rfc4122\"`"
        },
        "password": {
          "type": "string",
          "title": "@gotags: json:\"password\" db:\"password\" validate:\"required\"`"
        },
        "email": {
          "type": "string",
          "title": "@gotags: json:\"email\" db:\"email\" validate:\"required,email\"`"
        },
        "status": {
          "type": "string",
          "title": "@gotags: json:\"status\" db:\"status\" validate:\"required,alphanumunicode\"`"
        }
      }
    },
    "accountAccountResponse": {
      "type": "object",
      "properties": {
        "peopleId": {
          "type": "string",
          "title": "@gotags: json:\"people_id\" db:\"people_id\""
        },
        "status": {
          "type": "string",
          "title": "@gotags: json:\"status\" db:\"status\""
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"created_at\" db:\"created_at\""
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"updated_at\" db:\"updated_at\""
        },
        "validatedAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"validated_at\" db:\"validated_at\""
        },
        "expiredAt": {
          "type": "string",
          "format": "date-time",
          "title": "@gotags: json:\"expired_at\" db:\"expired_at\""
        },
        "email": {
          "type": "string",
          "title": "@gotags: json:\"email\" db:\"email\""
        },
        "password": {
          "type": "string",
          "title": "@gotags: json:\"password\" db:\"password\""
        },
        "signinId": {
          "type": "string",
          "title": "@gotags: json:\"signin_id\" db:\"signin_id\""
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
